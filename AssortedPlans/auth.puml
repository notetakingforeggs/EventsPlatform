@startuml
title Google OAuth2 Authentication Flow

'TODO add extra steps in token exchange/verification. remove firebase (or add in app), remove appLinks and gh pages, '
'TODO add steps following successful login (jwt creation, passing and storing in FE). implement secuirty filter chains.

actor User
participant "Flutter App (Frontend)" as FlutterApp
participant "Backend" as Backend
participant "Google API" as GoogleAPI
participant "Firebase" as Firebase
participant "ludicacid.com" as ludicacid.com

== Initialization ==
User -> FlutterApp: Opens app and presses "Sign-In/Login"
FlutterApp -> Backend: Sends sign-in request
Backend -> GoogleAPI: Initiates Google OAuth2 process
GoogleAPI --> Backend: Returns OAuth2 URL
Backend --> FlutterApp: Sends OAuth2 URL
FlutterApp -> FlutterApp: Opens URL in custom tabs browser


== OAuth2 Process ==

User -> GoogleAPI: Completes OAuth2 login
GoogleAPI -> ludicacid.com: redirect to "ludicacid.com" with Authorization code
ludicacid.com --> FlutterApp: Deep link intercepted
FlutterApp -> Backend: Auth code sent to backend
Backend -> Backend: Auth code verified
Backend -> GoogleAPI: Auth sent to be exchanged for tokens
GoogleAPI --> Backend: ID token, Auth token and Refresh token returned to backend
Backend -> Backend: Refresh and ID token stored in db,

Backend -> Backend: JWT created using ID token
Backend -> FlutterApp: JWT sent to "Flutter App (Frontend)"
FlutterApp -> FlutterApp: JWT stored in secure storage and user is verified as logged in
FlutterApp -> User: Navigates to home screen (successful login)

@enduml